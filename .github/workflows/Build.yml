name: Build master branch nightly (dev)

on:
  push:
    branches:
      - 'master'

permissions:
  contents: write

jobs:
  build_and_upload:
    name: Building
    strategy:
      matrix:
        include:
          - target: android
            os: ubuntu-latest
            flutter_version: '3.32.8'
            flutter_channel: 'stable'
            artifact_name: nightly-dev-apk
            artifact_path: build/app/outputs/apk/dev/release/*.apk

    runs-on: ${{matrix.os}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{matrix.flutter_version}}
          channel: ${{matrix.flutter_channel}}

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Generate boilerplate code
        run: flutter pub run build_runner build --delete-conflicting-outputs
          
      - name: Setup Firebase Project
        run: |
          curl -sL https://firebase.tools | bash
          dart pub global activate flutterfire_cli
          flutterfire configure --project=${{ secrets.FIREBASE_DEV_NAME }} \
          --platforms=android --yes \
          --out=lib/core/firebase/firebase_options_dev.dart \
          --android-package-name=com.degenk.boorusama.dev \
          --android-out=android/app/src/dev/google-services.json \
          --token=${{ secrets.FIREBASE_AUTH_TOKEN }} -f > null
          flutterfire configure --project=${{ secrets.FIREBASE_PROD_NAME }} \
          --platforms=android --yes \
          --out=lib/core/firebase/firebase_options_prod.dart \
          --android-package-name=com.degenk.boorusama \
          --android-out=android/app/src/prod/google-services.json \
          --token=${{ secrets.FIREBASE_AUTH_TOKEN }} -f > null

      - name: Get app version
        id: get_version
        shell: bash
        run: |
          echo "version=$(head -n 5 pubspec.yaml | tail -n 1 | cut -d ' ' -f 2)" >> $GITHUB_OUTPUT
          echo "appname=$(head -n 1 pubspec.yaml | cut -d ' ' -f 2)" >> $GITHUB_OUTPUT

      - name: Build APKs (Android)
        if: matrix.target == 'android'
        run: flutter build apk --release --flavor dev --dart-define-from-file env/dev.json

      - name: Publish artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{matrix.artifact_name}}
          path: ${{matrix.artifact_path}}

  publish_release:
    if: startsWith(github.ref, 'refs/tags/')
    name: Publish
    needs: build_and_upload
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: mkdir /tmp/artifacts

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: /tmp/artifacts

      - name: Get app version
        id: get_version
        shell: bash
        run: |
          echo "version=$(head -n 5 pubspec.yaml | tail -n 1 | cut -d ' ' -f 2)" >> $GITHUB_OUTPUT
          echo "appname=$(head -n 1 pubspec.yaml | cut -d ' ' -f 2)" >> $GITHUB_OUTPUT

      - name: Publishing
        uses: ncipollo/release-action@v1
        with:
          artifacts: "/tmp/artifacts/nightly-dev-apk/*.apk"
          tag: ${{github.ref_name}}
          bodyFile: changelogs/v${{steps.get_version.outputs.version}}.md
          prerelease: contains(github.ref, 'pre')
          allowUpdates: true
          artifactErrorsFailBuild: true
          replacesArtifacts: true
